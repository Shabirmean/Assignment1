// Auto-generated. Do not edit!

// (in-package aquacore.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class DoSurfaceTaskGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.task = null;
      this.ascend_speed = null;
    }
    else {
      if (initObj.hasOwnProperty('task')) {
        this.task = initObj.task
      }
      else {
        this.task = 0;
      }
      if (initObj.hasOwnProperty('ascend_speed')) {
        this.ascend_speed = initObj.ascend_speed
      }
      else {
        this.ascend_speed = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type DoSurfaceTaskGoal
    // Serialize message field [task]
    bufferOffset = _serializer.byte(obj.task, buffer, bufferOffset);
    // Serialize message field [ascend_speed]
    bufferOffset = _serializer.float64(obj.ascend_speed, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type DoSurfaceTaskGoal
    let len;
    let data = new DoSurfaceTaskGoal(null);
    // Deserialize message field [task]
    data.task = _deserializer.byte(buffer, bufferOffset);
    // Deserialize message field [ascend_speed]
    data.ascend_speed = _deserializer.float64(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 9;
  }

  static datatype() {
    // Returns string type for a message object
    return 'aquacore/DoSurfaceTaskGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '182b1839eeeb8a6283216175bc34cfac';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Desired Goal
    byte task                                # see SurfaceTaskTypes.msg
    float64 ascend_speed                     # in m/s (using depth autopilot) or pseudo-unit-rate (using angles autopilot)
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new DoSurfaceTaskGoal(null);
    if (msg.task !== undefined) {
      resolved.task = msg.task;
    }
    else {
      resolved.task = 0
    }

    if (msg.ascend_speed !== undefined) {
      resolved.ascend_speed = msg.ascend_speed;
    }
    else {
      resolved.ascend_speed = 0.0
    }

    return resolved;
    }
};

module.exports = DoSurfaceTaskGoal;
